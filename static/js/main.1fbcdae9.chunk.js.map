{"version":3,"sources":["images/logo.svg","components/Nav/Nav.js","components/Select/Select.js","components/Form/Form.js","components/Search/SearchResults.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Nav","className","src","logo","alt","Component","Select","name","id","value","selected","Form","htmlFor","type","SearchResults","readOnly","App","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"2FAAAA,EAAOC,QAAU,IAA0B,kC,4MCqB5BC,E,iLAhBX,OACE,yBAAKC,UAAU,OAIb,yBAAKA,UAAU,aACb,yBAAKC,IAAKC,IAAMC,IAAI,MAEtB,yBAAKH,UAAU,cACb,4C,GAXQI,aCiBHC,E,iLAhBX,OACE,4BAAQC,KAAK,UAAUC,GAAG,WACxB,4BAAQC,MAAM,GAAGC,UAAQ,GAAzB,QAGA,4BAAQD,MAAM,IAAd,QACA,4BAAQA,MAAM,IAAd,QACA,4BAAQA,MAAM,IAAd,QACA,4BAAQA,MAAM,IAAd,QACA,4BAAQA,MAAM,IAAd,QACA,4BAAQA,MAAM,IAAd,a,GAZaJ,aCuBNM,E,iLApBX,OACE,8BACE,oDACA,6BACA,yBAAKV,UAAU,mBACb,2BAAOW,QAAQ,WAAf,uBACA,kBAAC,EAAD,OAEF,yBAAKX,UAAU,uBACb,2BAAOW,QAAQ,YAAf,mBACA,2BAAOC,KAAK,OAAOZ,UAAU,gBAE/B,yBAAKA,UAAU,kBACb,4BAAQO,GAAG,cAAX,gB,GAfSH,aCsCJS,E,iLArCX,OACE,yBAAKb,UAAU,kBACb,yDACA,6BACA,yBAAKA,UAAU,QACb,uBAAGA,UAAU,iBAAb,UACA,2BAAOY,KAAK,OAAOZ,UAAU,oBAAoBQ,MAAM,GAAGM,UAAQ,KAEpE,yBAAKd,UAAU,QACb,uBAAGA,UAAU,iBAAb,uBACA,2BAAOY,KAAK,OAAOZ,UAAU,oBAAoBQ,MAAM,GAAGM,UAAQ,KAEpE,yBAAKd,UAAU,QACb,uBAAGA,UAAU,iBAAb,gBACA,2BAAOY,KAAK,OAAOZ,UAAU,oBAAoBQ,MAAM,GAAGM,UAAQ,KAEpE,yBAAKd,UAAU,QACb,uBAAGA,UAAU,iBAAb,WACA,2BAAOY,KAAK,OAAOZ,UAAU,oBAAoBQ,MAAM,GAAGM,UAAQ,KAEpE,yBAAKd,UAAU,QACb,uBAAGA,UAAU,iBAAb,oBACA,2BAAOY,KAAK,OAAOZ,UAAU,oBAAoBQ,MAAM,GAAGM,UAAQ,KAEpE,yBAAKd,UAAU,QACb,uBAAGA,UAAU,iBAAb,gBACA,2BAAOY,KAAK,OAAOZ,UAAU,oBAAoBQ,MAAM,GAAGM,UAAQ,KAEpE,yBAAKd,UAAU,QACb,uBAAGA,UAAU,iBAAb,kBACA,2BAAOY,KAAK,OAAOZ,UAAU,oBAAoBQ,MAAM,GAAGM,UAAQ,U,GAhChDV,a,MCwBbW,MApBf,WACE,OACE,yBAAKf,UAAU,OACb,gCACE,kBAAC,EAAD,MACA,yBAAKA,UAAU,aACb,uBAAGA,UAAU,kBACV,IACD,+CAIN,yBAAKA,UAAU,WACb,kBAAC,EAAD,MACA,kBAAC,EAAD,SCRFgB,EAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DAsCN,SAASC,EAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACTK,MAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBG,QACfT,UAAUC,cAAcS,YAI1BC,QAAQC,IACN,iHAKEb,GAAUA,EAAOc,UACnBd,EAAOc,SAAST,KAMlBO,QAAQC,IAAI,sCAGRb,GAAUA,EAAOe,WACnBf,EAAOe,UAAUV,WAO5BW,OAAM,SAAAC,GACLL,QAAQK,MAAM,4CAA6CA,MC1FjEC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SDgB1C,SAAkBrB,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAIqB,IAAIC,WAAwB7B,OAAOC,SAAS6B,MACpDC,SAAW/B,OAAOC,SAAS8B,OAIvC,OAGF/B,OAAOgC,iBAAiB,QAAQ,WAC9B,IAAM3B,EAAK,UAAMwB,WAAN,sBAEP/B,IAgEV,SAAiCO,EAAOC,GAEtC2B,MAAM5B,GACHK,MAAK,SAAAwB,GAEJ,IAAMC,EAAcD,EAASE,QAAQC,IAAI,gBAEnB,MAApBH,EAASI,QACO,MAAfH,IAA8D,IAAvCA,EAAYI,QAAQ,cAG5ChC,UAAUC,cAAcgC,MAAM9B,MAAK,SAAAC,GACjCA,EAAa8B,aAAa/B,MAAK,WAC7BV,OAAOC,SAASyC,eAKpBtC,EAAgBC,EAAOC,MAG1BgB,OAAM,WACLJ,QAAQC,IACN,oEArFAwB,CAAwBtC,EAAOC,GAI/BC,UAAUC,cAAcgC,MAAM9B,MAAK,WACjCQ,QAAQC,IACN,iHAMJf,EAAgBC,EAAOC,OCvC/BE,K","file":"static/js/main.1fbcdae9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.f53ae75f.svg\";","import React, { Component } from \"react\";\r\nimport logo from \"../../images/logo.svg\";\r\n\r\nclass Nav extends Component {\r\n  render() {\r\n    return (\r\n      <nav className=\"nav\">\r\n        {/* <div className=\"nav__icon\">\r\n          <i className=\"icon icon-menu\"></i>\r\n        </div> */}\r\n        <div className=\"nav__logo\">\r\n          <img src={logo} alt=\"\" />\r\n        </div>\r\n        <div className=\"nav__title\">\r\n          <p>Serpost</p>\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Nav;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Select extends Component {\r\n  render() {\r\n    return (\r\n      <select name=\"country\" id=\"country\">\r\n        <option value=\"\" selected>\r\n          2019\r\n        </option>\r\n        <option value=\"\">2018</option>\r\n        <option value=\"\">2017</option>\r\n        <option value=\"\">2016</option>\r\n        <option value=\"\">2015</option>\r\n        <option value=\"\">2014</option>\r\n        <option value=\"\">2013</option>\r\n      </select>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Select;\r\n","import React, { Component } from \"react\";\r\nimport Select from \"../Select/Select\";\r\n\r\nclass Form extends Component {\r\n  render() {\r\n    return (\r\n      <form>\r\n        <h2>Datos de búsqueda</h2>\r\n        <hr />\r\n        <div className=\"form-group year\">\r\n          <label htmlFor=\"country\">Año del envío</label>\r\n          <Select />\r\n        </div>\r\n        <div className=\"form-group tracking\">\r\n          <label htmlFor=\"tracking\">Nro de tracking</label>\r\n          <input type=\"text\" className=\"form-input\" />\r\n        </div>\r\n        <div className=\"form-group cta\">\r\n          <button id=\"btn-search\">Buscar</button>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form;\r\n","import React, { Component } from \"react\";\r\n\r\nclass SearchResults extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"search-results\">\r\n        <h2>Resultados de búsqueda</h2>\r\n        <hr />\r\n        <div className=\"item\">\r\n          <p className=\"item__feature\">Origen</p>\r\n          <input type=\"text\" className=\"item__description\" value=\"\" readOnly />\r\n        </div>\r\n        <div className=\"item\">\r\n          <p className=\"item__feature\">Estado del Envío</p>\r\n          <input type=\"text\" className=\"item__description\" value=\"\" readOnly />\r\n        </div>\r\n        <div className=\"item\">\r\n          <p className=\"item__feature\">Nro Tracking</p>\r\n          <input type=\"text\" className=\"item__description\" value=\"\" readOnly />\r\n        </div>\r\n        <div className=\"item\">\r\n          <p className=\"item__feature\">Destino</p>\r\n          <input type=\"text\" className=\"item__description\" value=\"\" readOnly />\r\n        </div>\r\n        <div className=\"item\">\r\n          <p className=\"item__feature\">Tipo de Envío</p>\r\n          <input type=\"text\" className=\"item__description\" value=\"\" readOnly />\r\n        </div>\r\n        <div className=\"item\">\r\n          <p className=\"item__feature\">Nro de Aviso</p>\r\n          <input type=\"text\" className=\"item__description\" value=\"\" readOnly />\r\n        </div>\r\n        <div className=\"item\">\r\n          <p className=\"item__feature\">Observación</p>\r\n          <input type=\"text\" className=\"item__description\" value=\"\" readOnly />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchResults;\r\n","import React from \"react\";\nimport NavBar from \"./components/Nav/Nav\";\nimport Form from \"./components/Form/Form\";\nimport SearchResults from \"./components/Search/SearchResults\";\nimport \"./styles.scss\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header>\n        <NavBar />\n        <div className=\"colorMode\">\n          <i className=\"icon icon-moon\">\n            {\" \"}\n            <span>Color Mode</span>\n          </i>\n        </div>\n      </header>\n      <div className=\"content\">\n        <Form />\n        <SearchResults />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}