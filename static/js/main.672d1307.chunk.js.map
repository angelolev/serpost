{"version":3,"sources":["images/logo.svg","components/Nav/Nav.js","components/Form/Form.js","serviceWorker.js","index.js","App.js"],"names":["module","exports","Nav","className","src","logo","alt","Component","Form","props","currentYear","Date","getFullYear","useState","tracking","setTracking","isRegistered","setRegister","toString","year","setYear","origin","status","destiny","type","notice","notes","detail","data","setData","onSubmit","evt","preventDefault","Axios","post","Anio","Filtro","Tracking","then","response","origen","estadoEnvio","nroTracking","destino","tipoEnvio","observacion","detalle","Swal","fire","title","text","icon","confirmButtonText","length","catch","error","console","log","htmlFor","name","id","value","onChange","e","target","defaultValue","required","readOnly","rows","map","fecha","descripcion","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","ReactDOM","render","document","getElementById","URL","process","href","addEventListener","fetch","contentType","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"sFAAAA,EAAOC,QAAU,IAA0B,kC,2NCqB5BC,E,iLAhBX,OACE,yBAAKC,UAAU,OAIb,yBAAKA,UAAU,aACb,yBAAKC,IAAKC,IAAMC,IAAI,MAEtB,yBAAKH,UAAU,cACb,4C,GAXQI,a,wCCCH,SAASC,EAAKC,GAC3B,IACIC,GADQ,IAAIC,MACQC,cAFU,EAIFC,mBAAS,IAJP,mBAI3BC,EAJ2B,KAIjBC,EAJiB,OAKFF,mBAAS,CACvCG,cAAc,IANkB,mBAKjBC,GALiB,aAQVJ,mBAASH,EAAYQ,YARX,mBAQ3BC,EAR2B,KAQrBC,EARqB,OASVP,mBAAS,CAC/BQ,OAAQ,GACRC,OAAQ,GACRR,SAAU,GACVS,QAAS,GACTC,KAAM,GACNC,OAAQ,GACRC,MAAO,GACPC,OAAQ,KAjBwB,mBAS3BC,EAT2B,KASrBC,EATqB,KAqElC,OACE,6BACE,0BAAMC,SAnDW,SAAAC,GACnBA,EAAIC,iBAEJC,IAAMC,KACJ,iEACA,CACEC,KAAMhB,EACNiB,OAAQ,EACRC,SAAUvB,IAGXwB,MAAK,SAASC,GACbV,EAAQ,CACNR,OAAQkB,EAASX,KAAKY,OACtBlB,OAAQiB,EAASX,KAAKa,YACtB3B,SAAUyB,EAASX,KAAKc,YACxBnB,QAASgB,EAASX,KAAKe,QACvBnB,KAAMe,EAASX,KAAKgB,UACpBnB,OAAQ,GACRC,MAAOa,EAASX,KAAKiB,YACrBlB,OAAQY,EAASX,KAAKkB,UAGxBC,IAAKC,KAAK,CACRC,MAAO,cACPC,KAAM,qCACNC,KAAM,UACNC,kBAAmB,OAGLb,EAASX,KAAKkB,QAAQO,QAEpCpC,EAAY,CACVD,cAAc,OAInBsC,OAAM,SAASC,GACdC,QAAQC,IAAIF,EAAMhB,UAElBQ,IAAKC,KAAK,CACRC,MAAO,SACPC,KAAM,oCACNC,KAAM,QACNC,kBAAmB,YAQrB,oDACA,6BACA,yBAAKjD,UAAU,mBACb,2BAAOuD,QAAQ,WAAf,uBACA,4BACEC,KAAK,UACLC,GAAG,UACHC,MAAO1C,EACP2C,SAAU,SAAAC,GAAC,OAAI3C,EAAQ2C,EAAEC,OAAOH,SAEhC,4BAAQA,MAAM,OAAOI,cAAY,GAAjC,QAGA,4BAAQJ,MAAM,QAAd,QACA,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,QAAd,UAGJ,yBAAK1D,UAAU,uBACb,2BAAOuD,QAAQ,YAAf,mBACA,2BACElC,KAAK,OACLrB,UAAU,aACV0D,MAAO/C,EACPgD,SAAU,SAAAC,GAAC,OAAIhD,EAAYgD,EAAEC,OAAOH,QACpCK,UAAQ,KAGZ,yBAAK/D,UAAU,kBACb,4BAAQyD,GAAG,cAAX,YAIJ,yBAAKzD,UAAU,kBACb,yDACA,6BACA,yBAAKA,UAAU,QACb,uBAAGA,UAAU,iBACX,uBAAGA,UAAU,qBADf,UAGA,8BAAU0D,MAAOjC,EAAKP,OAAQ8C,UAAQ,EAACC,KAAK,OAE9C,yBAAKjE,UAAU,QACb,uBAAGA,UAAU,iBACX,uBAAGA,UAAU,qBADf,uBAGA,8BAAU0D,MAAOjC,EAAKN,OAAQ6C,UAAQ,EAACC,KAAK,OAE9C,yBAAKjE,UAAU,QACb,uBAAGA,UAAU,iBACX,uBAAGA,UAAU,uBADf,gBAGA,8BAAU0D,MAAOjC,EAAKd,SAAUqD,UAAQ,EAACC,KAAK,OAEhD,yBAAKjE,UAAU,QACb,uBAAGA,UAAU,iBACX,uBAAGA,UAAU,sBADf,WAGA,8BAAU0D,MAAOjC,EAAKL,QAAS4C,UAAQ,EAACC,KAAK,OAE/C,yBAAKjE,UAAU,QACb,uBAAGA,UAAU,iBACX,uBAAGA,UAAU,mBADf,oBAGA,8BAAU0D,MAAOjC,EAAKJ,KAAM2C,UAAQ,EAACC,KAAK,OAE5C,yBAAKjE,UAAU,QACb,uBAAGA,UAAU,iBACX,uBAAGA,UAAU,oBADf,gBAGA,8BAAU0D,MAAOjC,EAAKH,OAAQ0C,UAAQ,EAACC,KAAK,OAE9C,yBAAKjE,UAAU,QACb,uBAAGA,UAAU,iBACX,uBAAGA,UAAU,0BADf,kBAGA,8BAAU0D,MAAOjC,EAAKiB,YAAasB,UAAQ,EAACC,KAAK,QAIrD,yBAAKjE,UAAU,WACb,yCACA,6BACCyB,EAAKD,OAAO0C,KAAI,SAAA1C,GAAM,OACrB,6BACE,yBAAKxB,UAAU,iBACb,2BACE,uBAAGA,UAAU,oBACZwB,EAAO2C,QAGZ,yBAAKnE,UAAU,wBACb,8BAAU0D,MAAOlC,EAAO4C,YAAaJ,UAAQ,W,MC/J3D,IAAMK,EAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DAsCN,SAASC,EAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACTzC,MAAK,SAAA8C,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBG,QACfR,UAAUC,cAAcQ,YAI1BlC,QAAQC,IACN,iHAKEuB,GAAUA,EAAOW,UACnBX,EAAOW,SAASP,KAMlB5B,QAAQC,IAAI,sCAGRuB,GAAUA,EAAOY,WACnBZ,EAAOY,UAAUR,WAO5B9B,OAAM,SAAAC,GACLC,QAAQD,MAAM,4CAA6CA,MC1FjEsC,IAASC,OAAO,mBCDD,WACb,OACE,yBAAK3F,UAAU,OACb,gCACE,kBAAC,EAAD,MACA,yBAAKA,UAAU,aACb,uBAAGA,UAAU,kBACV,IACD,+CAIN,yBAAKA,UAAU,WACb,kBAACK,EAAD,UDZQ,MAASuF,SAASC,eAAe,SDgB1C,SAAkBhB,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAIgB,IAAIC,WAAwBxB,OAAOC,SAASwB,MACpD9E,SAAWqD,OAAOC,SAAStD,OAIvC,OAGFqD,OAAO0B,iBAAiB,QAAQ,WAC9B,IAAMrB,EAAK,UAAMmB,WAAN,sBAEP1B,IAgEV,SAAiCO,EAAOC,GAEtCqB,MAAMtB,GACHzC,MAAK,SAAAC,GAEJ,IAAM+D,EAAc/D,EAASgE,QAAQC,IAAI,gBAEnB,MAApBjE,EAASjB,QACO,MAAfgF,IAA8D,IAAvCA,EAAYG,QAAQ,cAG5CxB,UAAUC,cAAcwB,MAAMpE,MAAK,SAAA8C,GACjCA,EAAauB,aAAarE,MAAK,WAC7BoC,OAAOC,SAASiC,eAKpB9B,EAAgBC,EAAOC,MAG1B1B,OAAM,WACLE,QAAQC,IACN,oEArFAoD,CAAwB9B,EAAOC,GAI/BC,UAAUC,cAAcwB,MAAMpE,MAAK,WACjCkB,QAAQC,IACN,iHAMJqB,EAAgBC,EAAOC,OCvC/BE,K","file":"static/js/main.672d1307.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.f53ae75f.svg\";","import React, { Component } from \"react\";\r\nimport logo from \"../../images/logo.svg\";\r\n\r\nclass Nav extends Component {\r\n  render() {\r\n    return (\r\n      <nav className=\"nav\">\r\n        {/* <div className=\"nav__icon\">\r\n          <i className=\"icon icon-menu\"></i>\r\n        </div> */}\r\n        <div className=\"nav__logo\">\r\n          <img src={logo} alt=\"\" />\r\n        </div>\r\n        <div className=\"nav__title\">\r\n          <p>Trackpe</p>\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Nav;\r\n","import React, { useState } from \"react\";\r\nimport Axios from \"axios\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nexport default function Form(props) {\r\n  let today = new Date();\r\n  let currentYear = today.getFullYear();\r\n\r\n  const [tracking, setTracking] = useState(\"\");\r\n  const [register, setRegister] = useState({\r\n    isRegistered: false\r\n  });\r\n  const [year, setYear] = useState(currentYear.toString());\r\n  const [data, setData] = useState({\r\n    origin: \"\",\r\n    status: \"\",\r\n    tracking: \"\",\r\n    destiny: \"\",\r\n    type: \"\",\r\n    notice: \"\",\r\n    notes: \"\",\r\n    detail: []\r\n  });\r\n\r\n  const handleSubmit = evt => {\r\n    evt.preventDefault();\r\n\r\n    Axios.post(\r\n      \"https://serpostapi20191121050851.azurewebsites.net/api/serpost\",\r\n      {\r\n        Anio: year,\r\n        Filtro: 0,\r\n        Tracking: tracking\r\n      }\r\n    )\r\n      .then(function(response) {\r\n        setData({\r\n          origin: response.data.origen,\r\n          status: response.data.estadoEnvio,\r\n          tracking: response.data.nroTracking,\r\n          destiny: response.data.destino,\r\n          type: response.data.tipoEnvio,\r\n          notice: \"\",\r\n          notes: response.data.observacion,\r\n          detail: response.data.detalle\r\n        });\r\n\r\n        Swal.fire({\r\n          title: \"Encontrado!\",\r\n          text: \"Aquí esta la info de tu paquete\",\r\n          icon: \"success\",\r\n          confirmButtonText: \"Ok\"\r\n        });\r\n\r\n        let hasDetail = response.data.detalle.length;\r\n        if (hasDetail) {\r\n          setRegister({\r\n            isRegistered: true\r\n          });\r\n        }\r\n      })\r\n      .catch(function(error) {\r\n        console.log(error.response);\r\n\r\n        Swal.fire({\r\n          title: \"Error!\",\r\n          text: \"Aun no tenemos data de tu paquete\",\r\n          icon: \"error\",\r\n          confirmButtonText: \"Ok\"\r\n        });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={handleSubmit}>\r\n        <h2>Datos de búsqueda</h2>\r\n        <hr />\r\n        <div className=\"form-group year\">\r\n          <label htmlFor=\"country\">Año del envío</label>\r\n          <select\r\n            name=\"country\"\r\n            id=\"country\"\r\n            value={year}\r\n            onChange={e => setYear(e.target.value)}\r\n          >\r\n            <option value=\"2019\" defaultValue>\r\n              2019\r\n            </option>\r\n            <option value=\"2018\">2018</option>\r\n            <option value=\"2017\">2017</option>\r\n            <option value=\"2016\">2016</option>\r\n            <option value=\"2015\">2015</option>\r\n            <option value=\"2014\">2014</option>\r\n            <option value=\"2013\">2013</option>\r\n          </select>\r\n        </div>\r\n        <div className=\"form-group tracking\">\r\n          <label htmlFor=\"tracking\">Nro de tracking</label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-input\"\r\n            value={tracking}\r\n            onChange={e => setTracking(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group cta\">\r\n          <button id=\"btn-search\">Buscar</button>\r\n        </div>\r\n      </form>\r\n\r\n      <div className=\"search-results\">\r\n        <h2>Resultados de búsqueda</h2>\r\n        <hr />\r\n        <div className=\"item\">\r\n          <p className=\"item__feature\">\r\n            <i className=\"icon icon-origen\"></i>Origen\r\n          </p>\r\n          <textarea value={data.origin} readOnly rows=\"1\" />\r\n        </div>\r\n        <div className=\"item\">\r\n          <p className=\"item__feature\">\r\n            <i className=\"icon icon-estado\"></i>Estado del Envío\r\n          </p>\r\n          <textarea value={data.status} readOnly rows=\"1\" />\r\n        </div>\r\n        <div className=\"item\">\r\n          <p className=\"item__feature\">\r\n            <i className=\"icon icon-tracking\"></i>Nro Tracking\r\n          </p>\r\n          <textarea value={data.tracking} readOnly rows=\"1\" />\r\n        </div>\r\n        <div className=\"item\">\r\n          <p className=\"item__feature\">\r\n            <i className=\"icon icon-destino\"></i>Destino\r\n          </p>\r\n          <textarea value={data.destiny} readOnly rows=\"1\" />\r\n        </div>\r\n        <div className=\"item\">\r\n          <p className=\"item__feature\">\r\n            <i className=\"icon icon-tipo\"></i>Tipo de Envío\r\n          </p>\r\n          <textarea value={data.type} readOnly rows=\"1\" />\r\n        </div>\r\n        <div className=\"item\">\r\n          <p className=\"item__feature\">\r\n            <i className=\"icon icon-aviso\"></i>Nro de Aviso\r\n          </p>\r\n          <textarea value={data.notice} readOnly rows=\"1\" />\r\n        </div>\r\n        <div className=\"item\">\r\n          <p className=\"item__feature\">\r\n            <i className=\"icon icon-observacion\"></i>Observación\r\n          </p>\r\n          <textarea value={data.observacion} readOnly rows=\"2\" />\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"history\">\r\n        <h2>Historial</h2>\r\n        <hr />\r\n        {data.detail.map(detail => (\r\n          <div>\r\n            <div className=\"history__date\">\r\n              <p>\r\n                <i className=\"icon icon-check\"></i>\r\n                {detail.fecha}\r\n              </p>\r\n            </div>\r\n            <div className=\"history__description\">\r\n              <textarea value={detail.descripcion} readOnly />\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","import React from \"react\";\nimport NavBar from \"./components/Nav/Nav\";\nimport Form from \"./components/Form/Form\";\nimport \"./styles.scss\";\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <header>\n        <NavBar />\n        <div className=\"colorMode\">\n          <i className=\"icon icon-moon\">\n            {\" \"}\n            <span>Color Mode</span>\n          </i>\n        </div>\n      </header>\n      <div className=\"content\">\n        <Form />\n      </div>\n    </div>\n  );\n}\n"],"sourceRoot":""}